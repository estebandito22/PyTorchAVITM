From: boyd@acsu.buffalo.edu (Daniel F Boyd)
Subject: Re: Off the shelf cheap DES keyseach machine (Was: Re: Corporate acceptance of the wiretap chip)
Organization: UB
Lines: 40
Nntp-Posting-Host: autarch.acsu.buffalo.edu

In article <strnlghtC5wCMo.Fx5@netcom.com> strnlght@netcom.com (David Sternlight) writes:
> In article <C5uvn4.MF7@austin.ibm.com> arussell@austin.ibm.com (AG Russell)
> writes:
> >At the company I worked for previously, I received a file that was
> >des encryped and the person that had sent it, went on vaction.
> >Rather than wait two weeks I set up a straight frontal attack with
> >one key at a time.  It only took two(2) days to crack the file.

> Taking this at face value (though it seems quite dissonant with much else
> that has been published here about brute force DES cracking, unless Russell
> was lucky with respect to the key), I'd be very interested in whether the
> program Russell used is available? In whether he used a cleartext
> recognition algorithm in the program or whether he had to examine each
> decryption by hand? In whether he used a known plaintext attack?


This has to be a dictionary attack.  No other attack makes sense.


This means that whoever encrypted the file just typed some password
which was a single dictionary word, and then Russell tried all the
words in the dictionary.  This isn't too implausible, especially if he
was smart and clipped the first plaintext block off the ciphertext (if
the first block doesn't decrypt then obviously the others won't
either).

Assuming one attempt a second, it takes seven hours to try all the
words in /usr/dict/words.   Not real tough.

If you want DES to be secure, you have to use RANDOM KEYS.  You can't
just type your wife's name and think "aha they'll never guess that
one!"



-- 
Daniel F. Boyd -- boyd@cs.buffalo.edu 

"Welcome to the First Church of Appliantology.  The white zone is for
loading and unloading only."
